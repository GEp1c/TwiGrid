{**
 * Default DataGrid template
 *
 * @param  TwiGrid\DataGrid $grid
 * @param  string $defaultTemplate
 * @param  array $flashes
 * @param  TwiGrid\Form $form
 * @param  ArrayIterator $columns
 * @param  callable $dataLoader
 * @param  string $recordVariable
 * @param  string $csrfToken
 * @param  \ArrayIterator|NULL $rowActions
 * @param  bool $hasRowActions
 * @param  \ArrayIterator|NULL $groupActions
 * @param  bool $hasGroupActions
 * @param  bool $hasFilters
 * @param  bool $hasInlineEdit
 * @param  string|NULL $iePrimary
 * @param  bool $isPaginated
 * @param  int $columnCount total number of columns in grid table
 *}

{spaceless}

<div class="tw-cnt" n:snippet="">
	{include #flashes}
	{include #datagrid}
</div>


{* === ... ============================================ *}

{define flashes}
	<div n:snippet="flashes">
		<p class="alert alert-{$flash->type === 'error' ? 'danger' : $flash->type}" data-hidable n:foreach="$flashes as $flash">
			{_$flash->message}
		</p>
	</div>
{/define}


{* === ... ============================================ *}

{define datagrid}

	<form n:name="$form" class="form tw-ajax">
		<div n:snippet="form-errors">
			{if $errors = $form->errors}
				<div class="alert alert-danger" data-hidable n:foreach="$errors as $error">{$error}</div>
			{/if}
		</div>

		{include #container}
	</form>

{/define}


{* === ... ============================================ *}

{define container}

	<table class="table table-bordered table-striped table-hover">
		{include #header}
		{include #body}
		{include #footer}
	</table>

{/define}


{* === ... ============================================ *}

{define header}

	<thead class="header">
		{include #header-sort-row}
		{if $hasFilters}{include #header-filter-row}{/if}
	</thead>

{/define}


{* === ... ============================================ *}

{define header-sort-row}

	<tr n:snippet="header-sort">
		<th rowspan="2" class="header-cell text-center" n:if="$hasGroupActions"></th>

		{foreach $columns as $name => $column}
			{var $params = [
				name => $name,
				column => $column,
				sortLink => ($column |sortLink),
				multiSortLink => ($column |sortLink:TwiGrid\Helpers::SORT_LINK_MULTI)
			]}

			{ifset #header-cell-$name}
				{include #"header-cell-$name", (expand) $params}

			{else}
				{include #header-cell, (expand) $params}
			{/ifset}
		{/foreach}

		<th class="header-cell header-cell--buttons" n:if="$hasFilters || $hasRowActions || $hasInlineEdit"></th>
	</tr>

{/define}


{* === ... ============================================ *}

{define header-filter-row}

	<tr n:snippet="filter-controls">
		{php $grid->addFilterCriteria(); $grid->addFilterButtons() }

		{foreach $columns as $name => $column}
			{var $params = [column => $name]}

			{ifset #filter-cell-$name}
				{include #"filter-cell-$name", (expand) $params}

			{else}
				{include #filter-cell, (expand) $params}
			{/ifset}
		{/foreach}

		<th class="filter-cell text-center">
			{include #filter-buttons}
		</th>
	</tr>

{/define}


{* === ... ============================================ *}

{define header-cell}

	<th n:class='header-cell,
			"header-cell-{$column->getName()}",
			sort-cell,
			text-nowrap,
			$grid->hasMultiSort() ? multi-sort,
			$grid->hasMultiSort() && $column->isSortedBy() && count($grid->orderBy) > 1 ? multi-sorted-by'>

		<a href="{$sortLink}" n:class='sort, "sort-{$column->getName()}", tw-ajax' n:tag-if="$column->isSortable()">
			{$column->getLabel()}
		</a>

		<span n:class="small, glyphicon, $column->getSortDir() === TwiGrid\Components\Column::DESC ? glyphicon-chevron-down : glyphicon-chevron-up"
			n:if="$column->isSortedBy()"></span>

		{include #sort-labels, column => $column, multiSortLink => $multiSortLink}
	</th>

{/define}


{* === ... ============================================ *}

{define sort-labels}
	<div class="sort-labels" n:if="$grid->hasMultiSort()">
		<span class="badge" n:if="$column->isSortedBy() && count($grid->orderBy) > 1">{$column->getSortIndex() + 1}</span>

		<a href="{$multiSortLink}" class="btn btn-xs btn-default tw-ajax" n:if="$column->isSortable()">
			<small class="glyphicon glyphicon-plus"></small>
		</a>
	</div>
{/define}


{* === ... ============================================ *}

{define filter-cell}

	<th class="filter-cell">
		{if isset($form["filters-criteria-$column"])}
			{if $form["filters-criteria-$column"] instanceof Nette\Forms\IControl}
				{input filters-criteria-$column, class => 'form-control'}

			{else}
				<p class="alert alert-danger">You have a&nbsp;filter defined for this column that does not inherit from <code>Nette\Forms\IControl</code>. Please define custom <code>filter-cell-{$column}</code> block and render this control manually.</p>
			{/if}
		{/if}
	</th>

{/define}


{* === ... ============================================ *}

{define filter-buttons}
	<div class="btn-group">
		{foreach $form['filters-buttons']->components as $name => $button}
			{include #filter-button, name => $name, button => $button}
		{/foreach}
	</div>
{/define}


{* === ... ============================================ *}

{define filter-button}
	<input n:name="$button" class="btn btn-default">
{/define}


{* === ... ============================================ *}

{define body}

	<tbody class="body" n:snippet="body">
		{if}
			{php $grid->addGroupActionCheckboxes(); $grid->addInlineEditControls() }

			{foreach $dataLoader() as $record}
				{var $primaryHash = ($record |primaryHash), $isInlineEdited = $hasInlineEdit && $iePrimary === $primaryHash}

				<tr n:class="$isInlineEdited ? success">

					<td class="body-cell text-center" n:if="$hasGroupActions">
						<input n:name="'actions-records-' . $primaryHash">
					</td>

					{foreach $columns as $name => $column}
						{var $params = [
							$recordVariable => $record,
							isInlineEdited => $isInlineEdited,
							column => $name,
						]}

						{if $isInlineEdited}
							{ifset #body-cell-$name-inline}
								{include #"body-cell-$name-inline", (expand) $params}

							{else}
								{include #body-cell-inline, (expand) $params}
							{/ifset}

						{else}
							{ifset #body-cell-$name}
								{include #"body-cell-$name", (expand) $params}

							{else}
								{include #body-cell, (expand) $params}
							{/ifset}
						{/if}
					{/foreach}

					<td n:if="$hasFilters || $hasRowActions || $hasInlineEdit" class="body-cell text-center">
						{if $hasRowActions || $hasInlineEdit}
							{include #row-actions, i => $iterator->counter - 1, $recordVariable => $record, isInlineEdited => $isInlineEdited, primaryHash => $primaryHash}
						{/if}
					</td>

				</tr>
			{/foreach}

		{else}
			<tr class="warning">
				<td class="body-cell" colspan="{$columnCount}">{_'No data.'}</td>
			</tr>
		{/if $iterations}
	</tbody>

{/define}


{* === ... ============================================ *}

{define body-cell-inline}
	{ifset $form["inline-values-$column"]}
		<td n:class='body-inline-cell, "body-inline-cell-{$column}"'>
			{if $form["inline-values-$column"] instanceof Nette\Forms\IControl}
				{input inline-values-$column, class => 'form-control'}

			{else}
				<p class="alert alert-danger">You have an inline form control defined for this column that does not inherit from <code>Nette\Forms\IControl</code>. Please define custom <code>body-inline-cell-{$column}</code> block and render this control manually.</p>
			{/if}
		</td>
	{else}
		{ifset #body-cell-$column}
			{include #"body-cell-$column", (expand) get_defined_vars()}

		{else}
			{include #body-cell, (expand) get_defined_vars()}
		{/ifset}
	{/ifset}
{/define}


{* === ... ============================================ *}

{define body-cell}
	<td n:class='body-cell, "body-cell-{$column}"'>{$$recordVariable |getValue:$column:FALSE}</td>
{/define}


{* === ... ============================================ *}

{define row-actions}
	<div class="btn-group">
		{if $isInlineEdited}
			{include #inline-buttons}

		{else}
			{ifset $form[$buttonName = "inline-buttons-$primaryHash"]}
				<input n:name="$buttonName" class="btn btn-sm btn-primary">
			{/ifset}

			{if $hasRowActions}
				{foreach $rowActions as $name => $action}
					{var $params = [
						name => $name,
						action => $action,
						$recordVariable => $$recordVariable,
						link => $grid->link('rowAction!', [
							action => $name,
							primary => $primaryHash,
							token => $action->isProtected() ? $csrfToken
						]),
					]}

					{ifset #row-action-$name}
						{include #"row-action-$name", (expand) $params}

					{else}
						{include #row-action, (expand) $params}
					{/ifset}
				{/foreach}
			{/if}
		{/if}
	</div>
{/define}


{* === ... ============================================ *}

{define inline-buttons}
	<input n:name="inline-buttons-edit" class="btn btn-sm btn-success">
	<input n:name="inline-buttons-cancel" class="btn btn-sm btn-default">
{/define}


{* === ... ============================================ *}

{define row-action}
	<a href="{$link}" class="btn btn-primary btn-sm tw-ajax" n:attr="data-tw-confirm => $action->getConfirmation()">
		{$action->getLabel()}
	</a>
{/define}


{* === ... ============================================ *}

{define footer}

	<tfoot class="footer" n:snippet="footer">
		{capture $footerInfo}{include #footer-info}{/capture}

		<tr n:if="$grid->hasData() && (strlen(trim($footerInfo)) || $hasGroupActions || $grid->getPageCount() > 1)">
			<td colspan="{$columnCount}" class="container footer-cell">
				<div class="row">
					{if $hasGroupActions}
						{include #group-action-buttons}
					{/if}

					{if $grid->getPageCount() > 1}
						{include #pagination}
					{/if}

					{$footerInfo |noescape}
				</div>
			</td>
		</tr>
	</tfoot>

{/define}


{* === ... ============================================ *}

{define group-action-buttons}
	{php $grid->addGroupActionButtons() }

	<div n:class="$isPaginated ? ($grid->getPageCount() <= 1 ? col-xs-8 : col-xs-4) : col-xs-12">
		{include #group-action-buttons-label}

		<div class="btn-group">
			{foreach $groupActions as $name => $action}
				{include #group-action-button, name => $name, action => $action}
			{/foreach}
		</div>
	</div>

{/define}


{* === ... ============================================ *}

{define group-action-buttons-label}
	<label class="action-buttons-label">{_'Checked:'}</label>
{/define}


{* === ... ============================================ *}

{define group-action-button}
	<input n:name="'actions-buttons-' . $name" class="btn btn-default" n:attr="data-tw-confirm => $action->getConfirmation()">
{/define}


{* === ... ============================================ *}

{define pagination}
	{php $grid->addPaginationControls() }
	<div class="col-xs-4" n:if="!$hasGroupActions"></div>

	<div class="col-xs-4 tw-pagination text-center">
		<a n:href="paginate!, p => max(1, $grid->page - 1)" n:class="btn, btn-default, $grid->page <= 1 ? disabled, tw-ajax">
			{_'Previous'}
		</a>

		<div class="actual">
			<select n:name="pagination-controls-page" class="form-control"></select> / {$grid->getPageCount()}
			<input n:name="pagination-buttons-change" class="js-hidden btn btn-default">
		</div>

		<a n:href="paginate!, p => min($grid->getPageCount(), $grid->page + 1)" n:class="btn, btn-default, $grid->page === $grid->getPageCount() ? disabled, tw-ajax">
			{_'Next'}
		</a>
	</div>
{/define}


{* === ... ============================================ *}

{define footer-info}
	<div n:class="!$hasGroupActions && $grid->getPageCount() <= 1 ? col-xs-12 : col-xs-4, text-right" n:if="$isPaginated">
		{($grid->page - 1) * $grid->getItemsPerPage() + 1}-{min($grid->getItemCount(), ($grid->page - 1) * $grid->getItemsPerPage() + $grid->getItemsPerPage())} / {_'%d items', $grid->getItemCount()}
	</div>
{/define}

{/spaceless}
